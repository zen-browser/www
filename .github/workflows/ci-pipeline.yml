name: CI Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_changes:
    name: Check Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      exists: ${{ steps.filter.outputs.exists }}
    steps:
      - uses: actions/checkout@v4

      - name: Filter changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            exists:
              - '**'
              - '!**.md'
              - '!.gitignore'
              - '!.gitattributes'
              - '!.vscode/**'
              - '!.env.example'
              - '!README.md'
              - '!CONTRIBUTING.md'

  setup:
    name: Setup
    needs: check_changes
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/composite-actions/setup-node-pnpm
        with:
          turbo-cache-key: ${{ runner.os }}-turbo-${{ github.sha }}
          node-modules-cache-key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

  eslint:
    name: ESLint
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/composite-actions/setup-node-pnpm
        with:
          turbo-cache-key: ${{ runner.os }}-turbo-${{ github.sha }}
          node-modules-cache-key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run ESLint
        uses: ./.github/composite-actions/eslint

  prettier:
    name: Prettier
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/composite-actions/setup-node-pnpm
        with:
          turbo-cache-key: ${{ runner.os }}-turbo-${{ github.sha }}
          node-modules-cache-key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run Prettier
        uses: ./.github/composite-actions/prettier

  cspell:
    name: CSpell
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/composite-actions/setup-node-pnpm
        with:
          turbo-cache-key: ${{ runner.os }}-turbo-${{ github.sha }}
          node-modules-cache-key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run CSpell
        uses: ./.github/composite-actions/cspell

  vitest:
    name: Vitest
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/composite-actions/setup-node-pnpm
        with:
          turbo-cache-key: ${{ runner.os }}-turbo-${{ github.sha }}
          node-modules-cache-key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run Vitest
        uses: ./.github/composite-actions/vitest

  build:
    name: Build
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/composite-actions/setup-node-pnpm
        with:
          turbo-cache-key: ${{ runner.os }}-turbo-${{ github.sha }}
          node-modules-cache-key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build Project
        uses: ./.github/composite-actions/build

  playwright:
    name: Playwright Tests
    needs: [check_changes, eslint, prettier, cspell, vitest, build]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js and pnpm
        uses: ./.github/composite-actions/setup-node-pnpm
        with:
          turbo-cache-key: ${{ runner.os }}-turbo-${{ github.sha }}
          node-modules-cache-key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run Playwright Tests
        uses: ./.github/composite-actions/playwright

  verify:
    name: Verify
    needs: [check_changes, eslint, prettier, cspell, vitest, build, playwright]
    runs-on: ubuntu-latest
    if: always()
    outputs:
      success: ${{ steps.set-result.outputs.success }}
    steps:
      - name: Set Result
        id: set-result
        run: |
          # Check if changes exist but no jobs ran, or if any job failed or was cancelled
          if [[ "${{ needs.check_changes.outputs.exists }}" != "true" ]]; then
            echo "success=true" >> $GITHUB_OUTPUT
            echo "No relevant changes detected - pipeline passed"
          elif [[ "${{ contains(needs.*.result, 'failure') }}" == "true" || "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
            echo "success=false" >> $GITHUB_OUTPUT
            echo "Pipeline failed - some jobs failed or were cancelled"
            exit 1
          else
            echo "success=true" >> $GITHUB_OUTPUT
            echo "All jobs completed successfully"
          fi
